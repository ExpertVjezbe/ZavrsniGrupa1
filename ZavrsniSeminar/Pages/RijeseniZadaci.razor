@page "/rijeseniZadaci"
@using ZavrsniSeminar.Models;
@inject HttpClient httpClient;
@inject NavigationManager navManager;


 <h3>Rijeseni zadaci</h3>

 
@if (IsError == true)
{
    <p>Nešto je pošlo po krivu,kontaktirajte administratora!</p>

}

<form>

    <table class="table table-hover table-bordered">

<thead>
            <tr class=" table-warning">
                <th scope="row">Id</th>
                <th scope="row">Todo</th>
                <th scope="col">Radnik ime</th>
                <th scope="col">Radnik prezime</th>
                <th scope="col">Opis posla</th>
                <th scope="row">Datum</th>
                <th colspan="3">Riješeno</th>
            </tr>
</thead>

        @foreach (var item in radniZadataks)
        {
            <tbody>
                <tr class="text-decoration-line-through">

                    <td> @item.Id</td>
                    <td> @item.Todo</td>
                    <td> @item.RadnikIme</td>
                    <td> @item.RadnikPrezime</td>
                    <td> @item.OpisPosla</td>
                    <td> @item.Datum</td>
                    <td> <button class="btn btn-outline-danger" @onclick="()=>Obrisi(item.Id)">Obriši</button></td>

 



                </tr>
            </tbody>
        }



</table>





</form>

     
 
 
 
 
 

@code {
    public int Id { get; set; }
    public bool IsDone = true;
    public bool IsError = false;
    public List<RadniZadatak> radniZadataks = new List<RadniZadatak>();

    protected override async Task OnInitializedAsync()
    {
        var result = await httpClient.GetAsync("https://expertvjezbeapi.azurewebsites.net/api/ToDoSeminars ");
        if (result.IsSuccessStatusCode)
        {
            radniZadataks = await result.Content.ReadFromJsonAsync<List<RadniZadatak>>();
            radniZadataks = radniZadataks.OrderByDescending(x => x.Datum).Where(x => x.IsDone == true).ToList();
        }
    }
    public void Obrisi(int id)
    {
        navManager.NavigateTo($"/obrisi/{id}");
    }
   
}
