@page "/obrisizadatak/{id:int}"
@using ZavrsniSeminar.Models;
@inject HttpClient httpClient;
@inject NavigationManager navManager;

@if (IsError == true)
{
    <P>Ups dogodila se greška kontaktiraj administratora.</P>    
}

<ul class="list-group">
    <li class="list-group-item active" aria-current="true">Dohvaćeni Id: @Id <button class="btn btn-outline-light" @onclick="Natrag">Natrag</button> <button class="btn btn-outline-light" @onclick="Obrisi">Obriši</button></li>
    <li class="list-group-item">Naziv Zadatka: @rijeseniZadatci.todo</li>
    <li class="list-group-item">Ime Radnika: @rijeseniZadatci.radnikIme</li>
    <li class="list-group-item">Prezime Radnika: @rijeseniZadatci.radnikPrezime</li>
    <li class="list-group-item">Opis Posla: @rijeseniZadatci.opisPosla</li>
    <li class="list-group-item">Datum: @rijeseniZadatci.datum</li>
</ul>





@code {
    [Parameter]
    public int Id { get; set; }
    public RadniZadatak rijeseniZadatci = new RadniZadatak();
    public bool IsError = false;

    protected override async Task OnInitializedAsync()
    {
        var result = await httpClient.GetAsync($"https://expertvjezbeapi.azurewebsites.net/api/ToDoSeminars/{Id}");
        if (result.IsSuccessStatusCode)
        {
            rijeseniZadatci = await result.Content.ReadFromJsonAsync<RadniZadatak>();
        }
    }

    public void Natrag()
    {
        navManager.NavigateTo("/rijeseniradnizadatci");
    }

    public async Task Obrisi()
    {
        var result = await httpClient.DeleteAsync($"https://expertvjezbeapi.azurewebsites.net/api/ToDoSeminars/{Id}");
        if (result.IsSuccessStatusCode)
        {
            navManager.NavigateTo("/rijeseniradnizadatci");
        }

        else
        {
            IsError = true;
        }
    }

}
